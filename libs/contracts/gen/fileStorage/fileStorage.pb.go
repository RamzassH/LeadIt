// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fileStorage/fileStorage.proto

package fileStoragev1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadFileChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileChunkRequest) Reset() {
	*x = UploadFileChunkRequest{}
	mi := &file_fileStorage_fileStorage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunkRequest) ProtoMessage() {}

func (x *UploadFileChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileStorage_fileStorage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadFileChunkRequest) Descriptor() ([]byte, []int) {
	return file_fileStorage_fileStorage_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFileChunkRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_fileStorage_fileStorage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileStorage_fileStorage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_fileStorage_fileStorage_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_fileStorage_fileStorage_proto protoreflect.FileDescriptor

const file_fileStorage_fileStorage_proto_rawDesc = "" +
	"\n" +
	"\x1dfileStorage/fileStorage.proto\x12\vfileStorage\x1a\x1cgoogle/api/annotations.proto\"(\n" +
	"\x16UploadFileChunkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"$\n" +
	"\x12UploadFileResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id2\x8b\x01\n" +
	"\vFileStorage\x12|\n" +
	"\x0fuploadFileChunk\x12#.fileStorage.UploadFileChunkRequest\x1a\x1f.fileStorage.UploadFileResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/fileStorage/upload(\x01B%Z#leadIt.fileStorage.v1;fileStoragev1b\x06proto3"

var (
	file_fileStorage_fileStorage_proto_rawDescOnce sync.Once
	file_fileStorage_fileStorage_proto_rawDescData []byte
)

func file_fileStorage_fileStorage_proto_rawDescGZIP() []byte {
	file_fileStorage_fileStorage_proto_rawDescOnce.Do(func() {
		file_fileStorage_fileStorage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileStorage_fileStorage_proto_rawDesc), len(file_fileStorage_fileStorage_proto_rawDesc)))
	})
	return file_fileStorage_fileStorage_proto_rawDescData
}

var file_fileStorage_fileStorage_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fileStorage_fileStorage_proto_goTypes = []any{
	(*UploadFileChunkRequest)(nil), // 0: fileStorage.UploadFileChunkRequest
	(*UploadFileResponse)(nil),     // 1: fileStorage.UploadFileResponse
}
var file_fileStorage_fileStorage_proto_depIdxs = []int32{
	0, // 0: fileStorage.FileStorage.uploadFileChunk:input_type -> fileStorage.UploadFileChunkRequest
	1, // 1: fileStorage.FileStorage.uploadFileChunk:output_type -> fileStorage.UploadFileResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fileStorage_fileStorage_proto_init() }
func file_fileStorage_fileStorage_proto_init() {
	if File_fileStorage_fileStorage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileStorage_fileStorage_proto_rawDesc), len(file_fileStorage_fileStorage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileStorage_fileStorage_proto_goTypes,
		DependencyIndexes: file_fileStorage_fileStorage_proto_depIdxs,
		MessageInfos:      file_fileStorage_fileStorage_proto_msgTypes,
	}.Build()
	File_fileStorage_fileStorage_proto = out.File
	file_fileStorage_fileStorage_proto_goTypes = nil
	file_fileStorage_fileStorage_proto_depIdxs = nil
}
