version: '3.8'

services:
  authdb:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  auth-service:
    build:
      context: .
      dockerfile: ./authService/Dockerfile
    restart: always
    depends_on:
      - authdb
    environment:
      ENV: ${ENV}
      GRPC_PORT: ${GRPC_PORT}
      DATABASE_DSN: ${DATABASE_DSN}
      TOKEN_TTL: ${TOKEN_TTL}
      CONFIG_PATH: "/app/authService/backend/config/config.yaml"
      REFRESH_TOKEN_TTL: ${REFRESH_TOKEN_TTL}
    volumes:
      - ./authService/backend/config:/app/backend/config
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
    command: [ "./auth-service", "--config", "/app/authService/backend/config/config.yaml" ]

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"


  notification-service:
    build:
      context: .
      dockerfile: ./notificationService/Dockerfile
    ports:
      - "50052:50052"
      - "8081:8081"
    depends_on:
      - kafka

  gateway:
    build: ./gateway
    restart: always
    depends_on:
      - auth-service
    environment:
      GRPC_SERVER_ADDRESS: "auth-service:57442"
      HTTP_PORT: "8080"
    ports:
      - "8080:8080"

volumes:
  db_data:
